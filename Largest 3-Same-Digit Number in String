// time : O(n^2)
class Solution {
    boolean isSame(String s){
        for(int i=1;i<s.length();i++){
            if(s.charAt(i) != s.charAt(0)){
                return false;
            }
        }
        return true;
    }
    public String largestGoodInteger(String num) {
        String ans = "";
        for(int i=0;i<num.length();i++){
            String temp = "";
            for(int j=i;j<num.length();j++){
                temp += num.charAt(j);
                if(temp.length() == 3 && isSame(temp)){
                    if(ans.length() == 0){
                        // initially string khali hai
                        ans = temp;
                    }else{
                        // mtlb compare krna padega
                        int a = Integer.parseInt(String.valueOf(ans.charAt(0)));
                        int b = Integer.parseInt(String.valueOf(temp.charAt(0)));
                        if(b>a){
                            ans = temp;
                        }
                    }
                }
            }
        }
        return ans;        
    }
}


// time:O(n)

class Solution {
    public String largestGoodInteger(String num) {
        // String[] cont = {"999","888","777","666","555","444","333","222","111","000"};
        if(num.contains("999")){
            return "999";
        }else if(num.contains("888")){
            return "888";
        }else if(num.contains("888")){
            return "888";
        }else if(num.contains("777")){
            return "777";
        }else if(num.contains("666")){
            return "666";
        }else if(num.contains("555")){
            return "555";
        }else if(num.contains("444")){
            return "444";
        }else if(num.contains("333")){
            return "333";
        }else if(num.contains("222")){
            return "222";
        }else if(num.contains("111")){
            return "111";
        }else if(num.contains("000")){
            return "000";
        }
        return ""; 
    }
}
